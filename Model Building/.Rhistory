data.frame(colnames(fifa_data))
str(fifa_data)
fifa_data$S.No.=as.character(fifa_data$S.No.)
fifa_data$sofifa_id=as.character(fifa_data$sofifa_id)
fifa_data$short_name=as.character(fifa_data$short_name)
fifa_data$long_name=as.character(fifa_data$long_name)
str(fifa_data)
x = c('Player_Continent','Club_Continent','preferred_foot','Position_Final')
y=c('age','Market_Value','Wages','pace','shooting','passing','dribbling','defending','physic','Mins_Total'
,'Shots_per_game_total','Aerial_Battles_Won_Per_Game_Total','Club_Int_Prestige','Club_Domestic_Prestige',
'Player_international_reputation','weak_foot')
fifa_data[x]=lapply(fifa_data[x],as.factor)
fifa_data[y]=lapply(fifa_data[y],as.numeric)
str(fifa_data)
fifa_data_backup=fifa_data
fifa_data_encoded=dummy_cols(fifa_data,select_columns = x, ## by default it converts all character and factor cols into dummies
remove_first_dummy = T, ## to keep n-1 vars
remove_selected_columns = T) ## keep only dummy var cols and remove original cols
str(fifa_data_encoded)
glimpse(fifa_data_encoded)
set.seed(1234)
pd=sample(2,nrow(fifa_data_normalized),replace = T , prob=c(.7,.3))
names(fifa_data_encoded) = make.names(names(fifa_data_encoded),unique = T)
names(fifa_data_encoded)
fifa_train_data=fifa_data_encoded[pd==1,]
fifa_test_data = fifa_data_encoded[pd==2,]
data.frame(colnames(fifa_train_data))
str(fifa_train_data)
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age +pace+shooting + defending + dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Asia +Player_Continent_Europe
+Player_Continent_North.America +Player_Continent_Oceania +Player_Continent_South.America
+Club_Continent_Europe.Tier.1 +Club_Continent_Europe.Tier.2 +Club_Continent_Europe.Tier.3
+Club_Continent_Europe.Tier.4 +Club_Continent_North.America +Club_Continent_South.America
+preferred_foot_Right +Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
+Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
+Position_Final_Midfield..Attacking.Defensive.)
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age +pace+shooting + defending + dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Asia +Player_Continent_Europe
+Player_Continent_North.America +#Player_Continent_Oceania +Player_Continent_South.America
+Club_Continent_Europe.Tier.1 +Club_Continent_Europe.Tier.2 +Club_Continent_Europe.Tier.3
+Club_Continent_Europe.Tier.4 +Club_Continent_North.America +Club_Continent_South.America
+preferred_foot_Right +Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
+Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
+Position_Final_Midfield..Attacking.Defensive.)
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age +pace+shooting + defending + dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Asia +Player_Continent_Europe
+Player_Continent_North.America +#Player_Continent_Oceania +
Player_Continent_South.America
#   +Club_Continent_Europe.Tier.1
+Club_Continent_Europe.Tier.2 +Club_Continent_Europe.Tier.3
+Club_Continent_Europe.Tier.4 +Club_Continent_North.America +Club_Continent_South.America
+preferred_foot_Right +Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
+Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
+Position_Final_Midfield..Attacking.Defensive.)
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age +pace+shooting + defending + dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Asia +Player_Continent_Europe
+Player_Continent_North.America +#Player_Continent_Oceania +
Player_Continent_South.America
#   +Club_Continent_Europe.Tier.1
+Club_Continent_Europe.Tier.2 +
#Club_Continent_Europe.Tier.3
#   +Club_Continent_Europe.Tier.4
+Club_Continent_North.America +Club_Continent_South.America
+preferred_foot_Right +Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
+Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
+Position_Final_Midfield..Attacking.Defensive.)
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age +pace+shooting + defending + dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Asia +Player_Continent_Europe
+Player_Continent_North.America +#Player_Continent_Oceania +
Player_Continent_South.America
#   +Club_Continent_Europe.Tier.1
+Club_Continent_Europe.Tier.2 +
#Club_Continent_Europe.Tier.3
#   +Club_Continent_Europe.Tier.4
#+Club_Continent_North.America +
Club_Continent_South.America
+preferred_foot_Right +Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
+Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
+Position_Final_Midfield..Attacking.Defensive.)
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age +pace+shooting + defending + dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Asia +Player_Continent_Europe
+Player_Continent_North.America +#Player_Continent_Oceania +
Player_Continent_South.America
#   +Club_Continent_Europe.Tier.1
+Club_Continent_Europe.Tier.2 +
#Club_Continent_Europe.Tier.3
#   +Club_Continent_Europe.Tier.4
#+Club_Continent_North.America +
#Club_Continent_South.America
+preferred_foot_Right +Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
+Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
+Position_Final_Midfield..Attacking.Defensive.)
data.frame(vif(lm_mktvalue))
library(car)
data.frame(vif(lm_mktvalue))
summary(lm_mktvalue)
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age +pace+shooting + defending + dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Asia +Player_Continent_Europe
# +Player_Continent_North.America +#Player_Continent_Oceania +
Player_Continent_South.America
#   +Club_Continent_Europe.Tier.1
+Club_Continent_Europe.Tier.2 +
#Club_Continent_Europe.Tier.3
#   +Club_Continent_Europe.Tier.4
#+Club_Continent_North.America +
#Club_Continent_South.America
+preferred_foot_Right +Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
+Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
+Position_Final_Midfield..Attacking.Defensive.)
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age +pace+shooting + defending + dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Asia +Player_Continent_Europe
# +Player_Continent_North.America +#Player_Continent_Oceania +
Player_Continent_South.America
#   +Club_Continent_Europe.Tier.1
+Club_Continent_Europe.Tier.2 +
#Club_Continent_Europe.Tier.3
#   +Club_Continent_Europe.Tier.4
#+Club_Continent_North.America +
#Club_Continent_South.America
+preferred_foot_Right +Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
+Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
+Position_Final_Midfield..Attacking.Defensive.)
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age +pace+shooting + defending + dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Asia +Player_Continent_Europe
+Player_Continent_North.America+ #Player_Continent_Oceania +
Player_Continent_South.America
#   +Club_Continent_Europe.Tier.1
+Club_Continent_Europe.Tier.2 +
#Club_Continent_Europe.Tier.3
#   +Club_Continent_Europe.Tier.4
#+Club_Continent_North.America +
#Club_Continent_South.America
+preferred_foot_Right +Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
+Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
+Position_Final_Midfield..Attacking.Defensive.)
data.frame(vif(lm_mktvalue))
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age +pace+shooting + defending + dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Asia +Player_Continent_Europe
+#Player_Continent_North.America+ #Player_Continent_Oceania +
Player_Continent_South.America
#   +Club_Continent_Europe.Tier.1
+Club_Continent_Europe.Tier.2 +
#Club_Continent_Europe.Tier.3
#   +Club_Continent_Europe.Tier.4
#+Club_Continent_North.America +
#Club_Continent_South.America
+preferred_foot_Right +Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
+Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
+Position_Final_Midfield..Attacking.Defensive.)
data.frame(vif(lm_mktvalue))
summary(lm_mktvalue)
fifa_data=read.csv(file.choose()) ## open fifa data cleaned
#1 we need to  create a standardized version of the data by scaling
#reason for scaling - income is n 1000s but other vars in 1,2 etc so to bring them down to the same scale we use this
#always using scaling as a general practice
data.frame(colnames(fifa_data))
scaled.data=scale(fifa_data[,6:21])
#We will first cluster the data into two clusters. Later below we will try to choose the optimal number of clusters.
set.seed(1234) #since kmeans uses a randomized starting point for cluster centroids
clust2 = kmeans(x=scaled.data, centers = 2, nstart = 5)
print(clust2)
totWss=rep(0,5)
for(k in 1:5){
set.seed(1234)
clust=kmeans(x=scaled.data, centers=k, nstart=5)
totWss[k]=clust$tot.withinss
}
plot(c(1:5), totWss, type="b", xlab="Number of Clusters",
ylab="sum of 'Within groups sum of squares'")
plot(c(1:5), totWss, type="b", xlab="Number of Clusters",
ylab="sum of 'Within groups sum of squares'")
set.seed(1234)
nc <- NbClust(fifa_data[,6:21], min.nc=2, max.nc=5, method="kmeans")
set.seed(1234) #since kmeans uses a randomized starting point for cluster centroids
clust3 = kmeans(x=scaled.data, centers = 2, nstart = 5)
clusplot(scaled.data, clust3$cluster, color=TRUE, shade=TRUE, labels=2, lines=1)
fifa_data$Clusters = clust3$cluster
fifa_data$Clusters = clust3$cluster
write.csv(subset(fifa_data,fifa_data$Clusters=1),'Cluster_1.csv')
write.csv(subset(fifa_data,fifa_data$Clusters==1),'Cluster_1.csv')
write.csv(subset(fifa_data,fifa_data$Clusters==2),'Cluster_2.csv')
fifa_data=read.csv(file.choose()) ## open fifa data cleaned
fifa.task= makeRegrTask(data=fifa_data_subset, target = "Market_Value")
setwd("C:/Users/U370867.l/iCloudDrive/GL//Capstone/Interim Report/Model Building")
fifa_data=read.csv(file.choose()) ## open fifa data cleaned
data.frame(colnames(fifa_data))
#fifa_data=fifa_data[,-19] # Red cards were 0 for all after outlier treatment so the variable has been removed
str(fifa_data)
fifa_data$S.No.=as.character(fifa_data$S.No.)
fifa_data$sofifa_id=as.character(fifa_data$sofifa_id)
fifa_data$short_name=as.character(fifa_data$short_name)
fifa_data$long_name=as.character(fifa_data$long_name)
str(fifa_data)
x = c('Player_Continent','Club_Continent','preferred_foot','Position_Final')
y=c('age','Market_Value','Wages','pace','shooting','passing','dribbling','defending','physic','Mins_Total'
,'Shots_per_game_total','Aerial_Battles_Won_Per_Game_Total','Club_Int_Prestige','Club_Domestic_Prestige',
'Player_international_reputation','weak_foot')
fifa_data[x]=lapply(fifa_data[x],as.factor)
fifa_data[y]=lapply(fifa_data[y],as.numeric)
str(fifa_data)
## splitting data into train and test ##
set.seed(1234)
pd=sample(2,nrow(fifa_data),replace = T , prob=c(.7,.3))
fifa_train_data=fifa_data[pd==1,]
fifa_test_data = fifa_data[pd==2,]
fifa_data_encoded=dummy_cols(fifa_data,select_columns = x, ## by default it converts all character and factor cols into dummies
remove_first_dummy = T, ## to keep n-1 vars
remove_selected_columns = T) ## keep only dummy var cols and remove original cols
str(fifa_data_encoded)
glimpse(fifa_data_encoded)
fifa_data_normalized = fifa_data_encoded
data.frame(colnames(fifa_data_normalized))
normalize_len = 6:21
normalize_len
for (i in normalize_len) {fifa_data_normalized[,i]=
(fifa_data_normalized[,i]-mean(fifa_data_normalized[,i]))/(sd(fifa_data_normalized[,i]))
}
summary(fifa_data_normalized
length(colnames(fifa_data[-c(1:4)]))
summary(fifa_data_normalized)
data.frame(colnames(fifa_data))
data.frame(colnames(fifa_data_normalized))
fifa_data_subset=fifa_data_normalized[-c(1:4)]
names(fifa_data_subset)
fifa_data_encoded=dummy_cols(fifa_data,select_columns = x, ## by default it converts all character and factor cols into dummies
remove_first_dummy = T, ## to keep n-1 vars
remove_selected_columns = T) ## keep only dummy var cols and remove original cols
names(fifa_data_encoded)=make.names(names(fifa_data_encoded),unique = T)
## splitting data into train and test ##
set.seed(1234)
fifa_data_normalized = fifa_data_encoded
data.frame(colnames(fifa_data_normalized))
normalize_len = 6:21
normalize_len
for (i in normalize_len) {fifa_data_normalized[,i]=
(fifa_data_normalized[,i]-mean(fifa_data_normalized[,i]))/(sd(fifa_data_normalized[,i]))
}
summary(fifa_data_normalized)
data.frame(colnames(fifa_data_normalized))
length(colnames(fifa_data[-c(1:4)]))
fifa_data_subset=fifa_data_normalized[-c(1:4)]
names(fifa_data_subset)
fifa.task= makeRegrTask(data=fifa_data_subset, target = "Market_Value")
lasso1=makeLearner("regr.glmnet", alpha= 1, predict.type = "response")
lasso1.model= train(lasso1, fifa.task)
LassoModel= getLearnerModel(lasso1.model)
summary(LassoModel)
getFeatureImportanceLearner(.model =  LassoModel)
library(plotmo) # for plot_glmnet
plot_glmnet(LassoModel, label=5)
plot_glmnet(LassoModel, label=5)
getwd()
fifa_data=read.csv(file.choose()) ## open fifa data cleaned
data.frame(colnames(fifa_data))
#fifa_data=fifa_data[,-19] # Red cards were 0 for all after outlier treatment so the variable has been removed
str(fifa_data)
fifa_data$S.No.=as.character(fifa_data$S.No.)
fifa_data$sofifa_id=as.character(fifa_data$sofifa_id)
fifa_data$short_name=as.character(fifa_data$short_name)
fifa_data$long_name=as.character(fifa_data$long_name)
str(fifa_data)
x = c('Player_Continent','Club_Continent','preferred_foot','Position_Final')
y=c('age','Market_Value','Wages','pace','shooting','passing','dribbling','defending','physic','Mins_Total'
,'Shots_per_game_total','Aerial_Battles_Won_Per_Game_Total','Club_Int_Prestige','Club_Domestic_Prestige',
'Player_international_reputation','weak_foot')
fifa_data[x]=lapply(fifa_data[x],as.factor)
fifa_data[y]=lapply(fifa_data[y],as.numeric)
str(fifa_data)
library('mlr')
library('explore')
fifa_data %>% explain_tree(target = 'Market_value')
fifa_data %>% explain_tree(target = Market_value)
fifa_data %>% explain_tree(target = Market_value)
fifa_data %>% explore(target = Market_value)
data.frame(colnames(fifa_data))
fifa_data %>% explore(target = 'Market_value')
fifa_data %>% explore_all()
fifa_data %>% explore()
fifa_data[,-c(1:4)] %>% explore()
z='c(Club_Int_Prestige','Club_Domestic_Prestige','Player_international_reputation','weak_foot')
x = c('Player_Continent','Club_Continent','preferred_foot','Position_Final')
y=c('age','Market_Value','Wages','pace','shooting','passing','dribbling','defending','physic','Mins_Total'
,'Shots_per_game_total','Aerial_Battles_Won_Per_Game_Total')
z=c(Club_Int_Prestige','Club_Domestic_Prestige','Player_international_reputation','weak_foot')
fifa_data[x]=lapply(fifa_data[x],as.factor)
fifa_data[y]=lapply(fifa_data[y],as.numeric)
fifa_data[z]=lapply(fifa_data[z],as.integer)
str(fifa_data)
library('mlr')
library('explore')
fifa_data[,-c(1:4)] %>% explore()
z=c('Club_Int_Prestige','Club_Domestic_Prestige','Player_international_reputation','weak_foot')
fifa_data[x]=lapply(fifa_data[x],as.factor)
fifa_data[y]=lapply(fifa_data[y],as.numeric)
fifa_data[z]=lapply(fifa_data[z],as.integer)
str(fifa_data)
fifa_data[,-c(1:4)] %>% explore()
fifa_data[z]=lapply(fifa_data[z],as.factor)
str(fifa_data)
fifa_data[,-c(1:4)] %>% explore()
fifa_data=read.csv(file.choose()) ## open fifa data cleaned
str(fifa_data)
fifa_data$S.No.=as.character(fifa_data$S.No.)
fifa_data$sofifa_id=as.character(fifa_data$sofifa_id)
fifa_data$short_name=as.character(fifa_data$short_name)
fifa_data$long_name=as.character(fifa_data$long_name)
str(fifa_data)
x = c('Player_Continent','Club_Continent','preferred_foot','Position_Final')
y=c('age','Market_Value','Wages','pace','shooting','passing','dribbling','defending','physic','Mins_Total'
,'Shots_per_game_total','Aerial_Battles_Won_Per_Game_Total','Club_Int_Prestige','Club_Domestic_Prestige',
'Player_international_reputation','weak_foot')
fifa_data[x]=lapply(fifa_data[x],as.factor)
fifa_data[y]=lapply(fifa_data[y],as.numeric)
str(fifa_data)
fifa_data_backup=fifa_data
fifa_data_encoded=dummy_cols(fifa_data,select_columns = x, ## by default it converts all character and factor cols into dummies
remove_first_dummy = T, ## to keep n-1 vars
remove_selected_columns = T) ## keep only dummy var cols and remove original cols
str(fifa_data_encoded)
## splitting data into train and test ##
set.seed(1234)
pd=sample(2,nrow(fifa_data_encoded),replace = T , prob=c(.7,.3))
names(fifa_data_encoded) = make.names(names(fifa_data_encoded),unique = T)
names(fifa_data_encoded)
fifa_train_data=fifa_data_encoded[pd==1,]
fifa_test_data = fifa_data_encoded[pd==2,]
data.frame(colnames(fifa_train_data))
str(fifa_train_data)
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age + pace +shooting + defending + dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Europe + Player_Continent_Other
#+Player_Continent_North.America +Player_Continent_Oceania +Player_Continent_South.America
#+Club_Continent_Europe.Tier.1 +Club_Continent_Europe.Tier.2 +Club_Continent_Europe.Tier.3
#+Club_Continent_Europe.Tier.4 +Club_Continent_North.America +Club_Continent_South.America
+ Club_Continent_Europe.Upper.Tier
+Club_Continent_Other
+preferred_foot_Right
#+Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
# +Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
#+Position_Final_Midfield..Attacking.Defensive.
+Position_Final_Both+Position_Final_Defensive)
data.frame(vif(lm_mktvalue))
summary(lm_mktvalue)
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age + pace +shooting + defending + #dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Europe + Player_Continent_Other
#+Player_Continent_North.America +Player_Continent_Oceania +Player_Continent_South.America
#+Club_Continent_Europe.Tier.1 +Club_Continent_Europe.Tier.2 +Club_Continent_Europe.Tier.3
#+Club_Continent_Europe.Tier.4 +Club_Continent_North.America +Club_Continent_South.America
+ Club_Continent_Europe.Upper.Tier
+Club_Continent_Other
+preferred_foot_Right
#+Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
# +Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
#+Position_Final_Midfield..Attacking.Defensive.
+Position_Final_Both+Position_Final_Defensive)
data.frame(vif(lm_mktvalue))
lm_mktvalue=lm(data=fifa_train_data,
Market_Value~Wages +age + pace +shooting + #defending + dribbling
+passing  +physic +Mins_Total
+Goals_total +Assists_Total +Shots_per_game_total +
Yellow_Cards_Total
+Red_Cards_Total
+Aerial_Battles_Won_Per_Game_Total
+Man_of_The_Match_Total
+Player_international_reputation
+weak_foot
+Club_Int_Prestige +
Club_Domestic_Prestige
+Player_Continent_Europe + Player_Continent_Other
#+Player_Continent_North.America +Player_Continent_Oceania +Player_Continent_South.America
#+Club_Continent_Europe.Tier.1 +Club_Continent_Europe.Tier.2 +Club_Continent_Europe.Tier.3
#+Club_Continent_Europe.Tier.4 +Club_Continent_North.America +Club_Continent_South.America
+ Club_Continent_Europe.Upper.Tier
+Club_Continent_Other
+preferred_foot_Right
#+Position_Final_Attacking.Midfield.Forward +Position_Final_Defense
# +Position_Final_Defensive.Midfield +Position_Final_Defensive.Midfield.Defense +Position_Final_Forward
#+Position_Final_Midfield..Attacking.Defensive.
+Position_Final_Both+Position_Final_Defensive)
data.frame(vif(lm_mktvalue))
summary(lm_mktvalue)
